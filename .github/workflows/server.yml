name: Build on DockerHub and Deploy to AWS

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
  SERVER_ENV_FILE: ${{ secrets.SERVER_ENV_FILE }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: shadi38/node-app:4.0

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > my-new-key.pem
          chmod 400 my-new-key.pem

      - name: Pull Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i my-new-key.pem ec2-user@13.43.88.72 'sudo docker pull shadi38/node-app:4.0'

      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i my-new-key.pem ec2-user@13.43.88.72 'sudo docker stop node-app || true'
          ssh -o StrictHostKeyChecking=no -i my-new-key.pem ec2-user@13.43.88.72 'sudo docker rm node-app || true'

      - name: Create `.env` file on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i my-new-key.pem ec2-user@13.43.88.72 << 'EOF'
            echo "${{ secrets.SERVER_ENV_FILE }}" > /home/ec2-user/.env
          EOF

      - name: Run new container with `.env`
        run: |
          ssh -o StrictHostKeyChecking=no -i my-new-key.pem ec2-user@13.43.88.72 << 'EOF'
            sudo docker stop node-app || true
            sudo docker rm node-app || true
            sudo docker run -d --name node-app --restart=always -p 3000:3000 --env-file /home/ec2-user/.env shadi38/node-app:4.0
          EOF
